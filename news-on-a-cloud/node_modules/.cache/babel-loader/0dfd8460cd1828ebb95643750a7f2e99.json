{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharon\\\\Projects\\\\NewsOnACloud\\\\news-on-a-cloud\\\\src\\\\components\\\\AddArticle.js\";\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextField, Box, Grid, Fab, MenuItem, Select, FormControl, InputLabel, Typography, Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport news from \"../TempData/News\";\nimport AddCategory from \"./AddCategory\";\nexport default function AddArticle() {\n  const [loading, setLoading] = React.useState(true);\n  const [categories, setCategories] = React.useState();\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:8080/articles', requestOptions).then(response => response.json()).then(data => console.log(data));\n  };\n\n  React.useEffect(() => {\n    const apiUrl = `http://localhost:8080/category`;\n    fetch(apiUrl).then(res => res.json()).then(res => {\n      console.log(res);\n      setCategories(res);\n      setLoading(false);\n    });\n  }, [categories]);\n  return /*#__PURE__*/React.createElement(Box, {\n    px: 15,\n    py: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Add a new Article\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    name: \"title\",\n    label: \"Title\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    name: \"writer\",\n    label: \"Writer\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, loading ? \"Loading\" : /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"categoryLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(Select, {\n      id: \"category\",\n      labelId: \"categoryLabel\",\n      label: \"Catrgory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, categories.map(category => /*#__PURE__*/React.createElement(MenuItem, {\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, category.name))),\n    control: control,\n    name: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddCategory, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 3,\n    name: \"content\",\n    label: \"Content\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 10,\n    name: \"body\",\n    label: \"Article Body\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    type: \"submit\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/Sharon/Projects/NewsOnACloud/news-on-a-cloud/src/components/AddArticle.js"],"names":["React","useForm","Controller","TextField","Box","Grid","Fab","MenuItem","Select","FormControl","InputLabel","Typography","Button","AddIcon","news","AddCategory","AddArticle","loading","setLoading","useState","categories","setCategories","register","control","handleSubmit","onSubmit","data","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","useEffect","apiUrl","res","marginBottom","map","category","id","name","float"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Fab,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport news from \"../TempData/News\";\r\nimport AddCategory from \"./AddCategory\";\r\nexport default function AddArticle() {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [categories, setCategories] = React.useState();\r\n  const { register, control, handleSubmit } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    };\r\n    fetch('http://localhost:8080/articles', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const apiUrl = `http://localhost:8080/category`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCategories(res);\r\n        setLoading(false);\r\n      });\r\n  }, [categories]);\r\n\r\n  return (\r\n    <Box px={15} py={4}>\r\n      <Typography variant=\"h5\" style={{ marginBottom: \"10px\" }}>\r\n        Add a new Article\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6} />\r\n          <Grid item md={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"writer\"\r\n              label=\"Writer\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            {loading ? (\r\n              \"Loading\"\r\n            ) : (\r\n              <FormControl variant=\"outlined\" fullWidth required>\r\n                <InputLabel id=\"categoryLabel\">Category</InputLabel>\r\n                <Controller\r\n                  as={\r\n                    <Select                      \r\n                      id=\"category\"\r\n                      labelId=\"categoryLabel\"\r\n                      label=\"Catrgory\"\r\n                    >\r\n                      {categories.map((category) => (\r\n                        <MenuItem value={category.id}>{category.name}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  }\r\n                  control={control}\r\n                  name=\"category\"\r\n                />\r\n              </FormControl>\r\n            )}\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <AddCategory categories={categories}/>\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={3}\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={10}\r\n              name=\"body\"\r\n              label=\"Article Body\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Fab\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              style={{ float: \"right\" }}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}