{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sharon\\\\Projects\\\\NewsOnACloud\\\\news-on-a-cloud\\\\src\\\\components\\\\AddArticle.js\";\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextField, Box, Grid, Fab, MenuItem, Select, FormControl, InputLabel, Typography } from \"@material-ui/core\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddCategory from \"./AddCategory\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function AddArticle() {\n  const [loading, setLoading] = React.useState(true);\n  const [categories, setCategories] = React.useState();\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm();\n  const [categoryAdded, setCategoryAdded] = React.useState(false);\n  const [openSuccessSnackBar, setSuccessOpenSnackBar] = React.useState(false);\n  const [openFailSnackBar, setFailOpenSnackBar] = React.useState(false);\n\n  const handleSnackBarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccessOpenSnackBar(false);\n    setFailOpenSnackBar(false);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:8080/articles', requestOptions).then(response => response.json()).then(data => {\n      console.log(data);\n\n      if (data.rowCount === 1) {\n        setSuccessOpenSnackBar(true);\n      } else {\n        setFailOpenSnackBar(true);\n      }\n    }).catch(e => setFailOpenSnackBar(true));\n  };\n\n  React.useEffect(() => {\n    const apiUrl = `http://localhost:8080/category`;\n    fetch(apiUrl).then(res => res.json()).then(res => {\n      console.log(res);\n      setCategories(res);\n      setCategoryAdded(false);\n      setLoading(false);\n    });\n  }, [categoryAdded]);\n\n  function handleCategoryAdded() {\n    setCategoryAdded(true);\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    px: 15,\n    py: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Add a new Article\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    name: \"title\",\n    label: \"Title\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    name: \"writer\",\n    label: \"Writer\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, loading ? \"Loading\" : /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"categoryLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Controller, {\n    as: /*#__PURE__*/React.createElement(Select, {\n      id: \"category\",\n      labelId: \"categoryLabel\",\n      label: \"Catrgory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, categories.map(category => /*#__PURE__*/React.createElement(MenuItem, {\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, category.name))),\n    control: control,\n    name: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddCategory, {\n    handleCategoryAdded: handleCategoryAdded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 3,\n    name: \"content\",\n    label: \"Content\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 10,\n    name: \"body\",\n    label: \"Article Body\",\n    inputRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    type: \"submit\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: openSuccessSnackBar,\n    autoHideDuration: 6000,\n    onClose: handleSnackBarClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleSnackBarClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Added article successfully\")), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: openFailSnackBar,\n    autoHideDuration: 6000,\n    onClose: handleSnackBarClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleSnackBarClose,\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Somthing went wrong, Please try again\")));\n}","map":{"version":3,"sources":["C:/Users/Sharon/Projects/NewsOnACloud/news-on-a-cloud/src/components/AddArticle.js"],"names":["React","useForm","Controller","TextField","Box","Grid","Fab","MenuItem","Select","FormControl","InputLabel","Typography","Snackbar","MuiAlert","AddIcon","AddCategory","Alert","props","AddArticle","loading","setLoading","useState","categories","setCategories","register","control","handleSubmit","categoryAdded","setCategoryAdded","openSuccessSnackBar","setSuccessOpenSnackBar","openFailSnackBar","setFailOpenSnackBar","handleSnackBarClose","event","reason","onSubmit","data","console","log","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","rowCount","catch","e","useEffect","apiUrl","res","handleCategoryAdded","marginBottom","map","category","id","name","float","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  Grid,\r\n  Fab,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddCategory from \"./AddCategory\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function AddArticle() {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [categories, setCategories] = React.useState();\r\n  const { register, control, handleSubmit } = useForm();\r\n  const [categoryAdded, setCategoryAdded] = React.useState(false);\r\n  const [openSuccessSnackBar, setSuccessOpenSnackBar] = React.useState(false);\r\n  const [openFailSnackBar, setFailOpenSnackBar] = React.useState(false);\r\n\r\n  const handleSnackBarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSuccessOpenSnackBar(false);\r\n    setFailOpenSnackBar(false);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    };\r\n    fetch('http://localhost:8080/articles', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          if(data.rowCount === 1){\r\n            setSuccessOpenSnackBar(true);\r\n          }else{\r\n            setFailOpenSnackBar(true);\r\n          }\r\n        })\r\n        .catch((e)=> setFailOpenSnackBar(true));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const apiUrl = `http://localhost:8080/category`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCategories(res);\r\n        setCategoryAdded(false);\r\n        setLoading(false);\r\n      });\r\n  }, [categoryAdded]);\r\n\r\n  function handleCategoryAdded(){\r\n    setCategoryAdded(true);\r\n  }\r\n\r\n  return (\r\n    <Box px={15} py={4}>\r\n      <Typography variant=\"h5\" style={{ marginBottom: \"10px\" }}>\r\n        Add a new Article\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6} />\r\n          <Grid item md={6}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              name=\"writer\"\r\n              label=\"Writer\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            {loading ? (\r\n              \"Loading\"\r\n            ) : (\r\n              <FormControl variant=\"outlined\" fullWidth required>\r\n                <InputLabel id=\"categoryLabel\">Category</InputLabel>\r\n                <Controller\r\n                  as={\r\n                    <Select                      \r\n                      id=\"category\"\r\n                      labelId=\"categoryLabel\"\r\n                      label=\"Catrgory\"\r\n                    >\r\n                      {categories.map((category) => (\r\n                        <MenuItem value={category.id}>{category.name}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  }\r\n                  control={control}\r\n                  name=\"category\"\r\n                />\r\n              </FormControl>\r\n            )}\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <AddCategory handleCategoryAdded={handleCategoryAdded}/>\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={3}\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={10}\r\n              name=\"body\"\r\n              label=\"Article Body\"\r\n              inputRef={register}\r\n            />\r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Fab\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              style={{ float: \"right\" }}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={openSuccessSnackBar}\r\n          autoHideDuration={6000}\r\n          onClose={handleSnackBarClose}\r\n        >\r\n          <Alert onClose={handleSnackBarClose} severity=\"success\">\r\n            Added article successfully\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={openFailSnackBar}\r\n          autoHideDuration={6000}\r\n          onClose={handleSnackBarClose}\r\n        >\r\n          <Alert onClose={handleSnackBarClose} severity=\"error\">\r\n            Somthing went wrong, Please try again\r\n          </Alert>\r\n        </Snackbar>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}